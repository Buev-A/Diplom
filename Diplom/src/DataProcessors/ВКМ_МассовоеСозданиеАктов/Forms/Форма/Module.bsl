&НаКлиентеПроцедура ВыполнитьОперацию(Команда)	
	ДлительнаяОперация = НачатьВыполнениеНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,ОповещениеОЗавершении,ПараметрыОжидания);
	КонецПроцедуры   

 &НаКлиентеПроцедура ОбработатьДанные(Результат, ДополнительныеПараметры) Экспорт	ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");		Если Результат = Неопределено Тогда		Возврат;	ИначеЕсли Результат.Статус = "Ошибка" Тогда		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);		ЭтаФорма.СтрокаСостояния = "Ошибка";	ИначеЕсли Результат.Статус = "Выполнено" Тогда		ЭтаФорма.Индикатор = 100;		ЭтаФорма.СтрокаСостояния = "Выполнено";	КонецЕсли;  
	
	СписокРеализацииМассив = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ЗаполнитьСписокРеализаций(СписокРеализацииМассив);
		КонецПроцедуры  

&НаСервереФункция НачатьВыполнениеНаСервере()	
	ИмяФункции = "Обработки.ВКМ_МассовоеСозданиеАктов.СоздатьСписокНаСервере";	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,ИмяФункции,Объект.Период.ДатаНачала,Объект.Период.ДатаОкончания);	КонецФункции    

&НаКлиенте Процедура ОбработчикОжиданияИндикатор() 		Прогресс = ПрочитатьПрогресс(ИДЗадания);	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда		ЭтаФорма.СтрокаСостояния = "";		Возврат;	КонецЕсли;		Если ТипЗнч(Прогресс) = Тип("Структура") 		И Прогресс.Свойство("ЗавершеноАварийно") Тогда		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");		Возврат;	КонецЕсли;		Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда		ЭтаФорма.Индикатор = 100;		ЭтаФорма.СтрокаСостояния = "Задание завершено.";	Иначе		Если Прогресс.Свойство("Процент") Тогда			ЭтаФорма.Индикатор = Прогресс.Процент;					КонецЕсли;				Если Прогресс.Свойство("Текст") Тогда			ЭтаФорма.СтрокаСостояния = Прогресс.Текст;		КонецЕсли;	КонецЕсли;КонецПроцедуры

&НаСервереФункция ПрочитатьПрогресс(Знач ИдентификаторФоновогоЗадания) Экспорт		Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);		Если Задание = Неопределено Тогда		Возврат Неопределено;	КонецЕсли;		Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");		Возврат Неопределено;	КонецЕсли;		// используем БСП	ПрогрессЗадания = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторФоновогоЗадания);		Если ПрогрессЗадания = Неопределено	 Или ТипЗнч(ПрогрессЗадания) <> Тип("Структура") Тогда 		ПрогрессЗадания = Новый Структура;	КонецЕсли;	ПрогрессЗадания.Вставить("ЗаданиеВыполнено", ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания));		Возврат ПрогрессЗадания;	КонецФункции

 &НаКлиенте 
Процедура ЗаполнитьСписокРеализаций(СписокРеализацииМассив) 
	
     Объект.Реализации.Очистить();
	 
	 Для Каждого Строка из СписокРеализацииМассив Цикл
		 
		 НоваяСтрока = Объект.Реализации.Добавить();
		 НоваяСтрока.Договор = Строка.Договор;
		 НоваяСтрока.Реализация = Строка.Реализация;
		 
	 КонецЦикла;
	 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Объект.Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
КонецПроцедуры
