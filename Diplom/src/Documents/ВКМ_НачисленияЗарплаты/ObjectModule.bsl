#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОклад();
	РассчитатьОтпуск();
	ПроцентЗаВыполненныеРаботы();
	ВзаиморасчетыССотрудниками();
	РассчитатьУдержания();
	ДнейОтпуска();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого Строка Из Начисления Цикл
		
		Если Строка.ДатаНачала > Строка.ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 дата начала больше даты окончания",
				Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;

		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ФиксированнаяПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 не верный вид расчета", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВзаиморасчетыССотрудниками()
	
	// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.Сумма КАК Сумма
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|	И ВКМ_ОсновныеНачисления.Сумма <> 0";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвижения() 
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПрочиеОсновныеНачисления();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу() 
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МинимальнаяДатаНачала = СтрокиОклада[0].ДатаНачала;
	МаксимальнаяДатаОкончания = СтрокиОклада[0].ДатаОкончания;
	
	Для Сч = 1 по СтрокиОклада.Количество() - 1 Цикл
		
		Если МинимальнаяДатаНачала > СтрокиОклада[Сч].ДатаНачала Тогда
			МинимальнаяДатаНачала = СтрокиОклада[Сч].ДатаНачала;
		КонецЕсли;
		
		Если МаксимальнаяДатаОкончания < СтрокиОклада[Сч].ДатаОкончания Тогда
			МаксимальнаяДатаОкончания = СтрокиОклада[Сч].ДатаОкончания;
		КонецЕсли;  
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_периодыОкладаИсходные
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
	|ПОМЕСТИТЬ ВТ_ИзмененияОклада
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|			&МинимальнаяДатаНачала,
	|			Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТ_периодыОкладаИсходные.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТ_периодыОкладаИсходные КАК ВТ_периодыОкладаИсходные)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудников.Период,
	|	ВКМ_УсловияОплатыСотрудников.Сотрудник,
	|	ВКМ_УсловияОплатыСотрудников.Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
	|	И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
	|	И ВКМ_УсловияОплатыСотрудников.Сотрудник В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_периодыОкладаИсходные.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_периодыОкладаИсходные КАК ВТ_периодыОкладаИсходные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыНачала.Сотрудник КАК Сотрудник,
	|	ДатыНачала.Период КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатыОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31))) КАК ДатаОкончания,
	|	ДатыНачала.Оклад КАК Оклад
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|	ВТ_ИзмененияОклада КАК ДатыНачала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияОклада КАК ДатыОкончания
	|		ПО ДатыНачала.Сотрудник = ДатыОкончания.Сотрудник
	|			И ДатыНачала.Период < ДатыОкончания.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыНачала.Сотрудник,
	|	ДатыНачала.Оклад,
	|	ДатыНачала.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_периодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|	ВТ_периодыОкладаИсходные.ВидРасчета КАК ВидРасчета,
	|	ВТ_ИнтервалыОклада.Оклад КАК Показатель,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_периодыОкладаИсходные.ДатаНачала
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
	|		ИНАЧЕ ВТ_периодыОкладаИсходные.ДатаНачала
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_периодыОкладаИсходные.ДатаОкончания
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
	|		ИНАЧЕ ВТ_периодыОкладаИсходные.ДатаОкончания
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВТ_периодыОкладаИсходные.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_периодыОкладаИсходные КАК ВТ_периодыОкладаИсходные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|		ПО ВТ_периодыОкладаИсходные.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|			И (ВТ_ИнтервалыОклада.ДатаНачала <= ВТ_периодыОкладаИсходные.ДатаОкончания)
	|			И ВТ_периодыОкладаИсходные.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания";
	
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;  
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеОсновныеНачисления() 
	
	ТабЧасть = Начисления.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.ВидРасчета КАК ВидРасчета,
		|	Т.ГрафикРаботы КАК ГрафикРаботы,
		|	Т.ДатаНачала КАК ДатаНачала,
		|	Т.ДатаОкончания КАК ДатаОкончания,
		|	Т.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ТабЧасть
		|ИЗ
		|	&Т КАК Т
		|ГДЕ
		|	Т.ВидРасчета В(&ВидРасчета)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТабЧасть.ВидРасчета КАК ВидРасчета,
		|	ВТ_ТабЧасть.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_ТабЧасть.ДатаНачала КАК ДатаНачала,
		|	ВТ_ТабЧасть.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ТабЧасть.Сотрудник КАК Сотрудник
		|ИЗ
		|	ВТ_ТабЧасть КАК ВТ_ТабЧасть";
	
	ПланыРасчетовМассив = Новый Массив;
	ПланыРасчетовМассив.Добавить(ПланыВидовРасчета.ВКМ_ОсновныеНачисления.НайтиПоКоду("2"));
	ПланыРасчетовМассив.Добавить(ПланыВидовРасчета.ВКМ_ОсновныеНачисления.НайтиПоКоду("3"));
	
	Запрос.УстановитьПараметр("Т", ТабЧасть);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыРасчетовМассив);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Выборка.ДатаНачала;
		Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, - 12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаОкончания, - 1));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьОклад() 
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК Норма,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)
	               |				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		СуммаНачислено = Движение.Показатель * Выборка.Факт / Выборка.Норма;
		НДФЛ = Окр((СуммаНачислено * 0.13),0,РежимОкругления.Окр15как10);
		
		Движение.Показатель = СуммаНачислено;
		Движение.Сумма = СуммаНачислено - НДФЛ;
		Движение.ДнейОтработано = Выборка.факт;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);     //обязательно записать с параметром "Истина" для искл пересчета базовых данных др начислений
	
КонецПроцедуры

Процедура РассчитатьОтпуск() 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК БазаДоп,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ДнейОтработаноБаза, 0) КАК БазаОтработано,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисления.ПериодДействияНачало, ВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) КАК
	|		ДнейОтпуска
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		//Движение.ДнейОтработано = Выборка.Факт;      
		
		Если Выборка.БазаОтработано = 0 Тогда
			Движение.Сумма = 0;
			Продолжить;
		КонецЕсли;
		
		Движение.Сумма = ((Выборка.БазаОсн + Выборка.БазаДоп) / Выборка.БазаОтработано * Выборка.ДнейОтпуска) * 0.87;    //ЗП за 12 мес/Кол-во раб дней * Кол-ва календ дней
		Движение.Показатель = (Выборка.БазаОсн + Выборка.БазаДоп) / Выборка.БазаОтработано * Выборка.ДнейОтпуска;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);     
	
КонецПроцедуры

Процедура ПроцентЗаВыполненныеРаботы()       
	
	ТабЧасть = Начисления.Выгрузить();  
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Т.ВидРасчета КАК ВидРасчета,
	                      |	Т.Сотрудник КАК Сотрудник
	                      |ПОМЕСТИТЬ ВТ_ТабЧасть
	                      |ИЗ
	                      |	&Т КАК Т
	                      |ГДЕ
	                      |	Т.ВидРасчета = &ВидРасчета
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТабЧасть.ВидРасчета КАК ВидРасчета,
	                      |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
	                      |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот,
	                      |	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки
	                      |ИЗ
	                      |	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	                      |		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник,
	                      |	ВТ_ТабЧасть КАК ВТ_ТабЧасть
	                      |ГДЕ
	                      |	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	                      |	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник,
	                      |	ВКМ_ОсновныеНачисления.НомерСтроки,
	                      |	ВТ_ТабЧасть.ВидРасчета,
	                      |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот" );  
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаВыполненныеРаботы);
	Запрос.УстановитьПараметр("Т", ТабЧасть);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата)); 
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата)); 
	Запрос.УстановитьПараметр("Регистратор", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл      
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];  
		Движение.Сумма = Выборка.СуммаКОплатеОборот * 0.87;  
		Движение.Показатель = Выборка.СуммаКОплатеОборот;     
		
	КонецЦикла;	
	
	Движения.ВКМ_ОсновныеНачисления.Записать();  
	
КонецПроцедуры     

Процедура РассчитатьУдержания()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	                      |	ВКМ_ОсновныеНачисления.Показатель - ВКМ_ОсновныеНачисления.Сумма КАК НДФЛ,
	                      |	ВКМ_ОсновныеНачисления.Показатель КАК Показатель
	                      |ИЗ
	                      |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	                      |ГДЕ
	                      |	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор" );  
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);    
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник; 
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сумма = Окр(Выборка.НДФЛ,0,РежимОкругления.Окр15как10);    
		Движение.Показатель = Выборка.Показатель;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура ДнейОтпуска()
	
	Движения.ВКМ_ДнейОтпуска.Записывать = Истина;
    Движения.ВКМ_ДнейОтпуска.Записать();

	ТабЧасть = Начисления.Выгрузить();
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Сотрудник КАК Сотрудник,
		|	Таблица.ВидРасчета КАК ВидРасчета,
		|	Таблица.ДатаНачала КАК ДатаНачала,
		|	Таблица.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	&Таблица КАК Таблица
		|ГДЕ
		|	Таблица.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник КАК Сотрудник,
		|	РАЗНОСТЬДАТ(ВТ_Данные.ДатаНачала, ВТ_Данные.ДатаОкончания, ДЕНЬ) КАК ДнейОтпуска,
		|	ВТ_Данные.ДатаНачала КАК ДатаНачала
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные";
		
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);    	
	Запрос.УстановитьПараметр("Таблица", ТабЧасть);    	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ДнейОтпуска.ДобавитьРасход();
		Движение.Период = Выборка.ДатаНачала;
		Движение.Регистратор = Ссылка;
		Движение.Сотрудник = Выборка.Сотрудник;  
		Движение.ДнейОтпуска = Выборка.ДнейОтпуска;		

	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли