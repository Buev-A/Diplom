#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Не понимаю почему ругалось что не было проверки на ОбменДанными.Загрузка
	Если ОбменДанными.Загрузка Тогда  
        Возврат;  
    КонецЕсли;  
	
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_НачалоДействияДоговора, ВКМ_КонецДействияДоговора");
	// Проверка договора на выбранный тип договора и его период действия
	//<начало>
	Если Данные.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда 
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Выберите нужный тип договора");
		Возврат;
	КонецЕсли;

	Если Дата < Данные.ВКМ_НачалоДействияДоговора	и Дата > Данные.ВКМ_КонецДействияДоговора Тогда
		Отказ = Истина; 
		ОбщегоНазначения.СообщитьПользователю("Действие договора вне рамок заказа");
		Возврат;
	КонецЕсли;     
	//<конец>    
	
	// Создание сообщения телеграм-боту о создании новой Заявки на обслуживание клиента или об изменении существующей 
	//<начало>
	Если Ссылка.Пустая() Тогда
		СообщениеОНовомДокументе(); 
	Иначе
		СообщениеОбИзмененииРеквизитовДокумента();
	КонецЕсли;    
	//<конец>    
	
КонецПроцедуры
	
Процедура ОбработкаПроведения(Отказ, Режим)

	Если Не ЗначениеЗаполнено(Специалист) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Выберите специалиста");
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Специалист.Категория КАК Категория,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК
	|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник.Ссылка = &Сотрудник
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОбслуживаниеКлиента.Специалист.Категория,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0),
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы";
	
	Запрос.УстановитьПараметр("Дата", Дата);  
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
		
	//регистр ВКМ_ВыполненныеСотрудникомРаботы 
	Если Выборка.Категория <> Перечисления.ВКМ_КатегорииСотрудников.Специалист Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Выберите специалиста");
	Иначе
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.Период = Дата;
			Движение.Сотрудник = Специалист; 
			Движение.ЧасовКОплате = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту; 
			
			Если ЗначениеЗаполнено(Выборка.ПроцентОтРабот) или Выборка.ПроцентОтРабот = 0 Тогда
				Отказ = Ложь;
			Иначе
				Отказ = Истина;
				ОбщегоНазначения.СообщитьПользователю("Специалисту не установлен процент от выполненных работ"); 
			КонецЕсли; 
			
			Движение.СуммаКОплате = Движение.ЧасовКОплате * Выборка.ВКМ_СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот/100;
		КонецЦикла;
	КонецЕсли;   
		
	// регистр ВКМ_ВыполненныеКлиентуРаботы 
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;  
		Движение.СуммаКОплате = Выборка.ВКМ_СтоимостьЧасаРаботы * Движение.КоличествоЧасов;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщениеОбИзмененииРеквизитовДокумента()
	
	Если Не ЭтоНовый() Тогда 
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка); 
		
		Результат = Запрос.Выполнить(); 
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда 
			ДатаРабот = Выборка.ДатаПроведенияРабот;
			ВремяНачала = Выборка.ВремяНачалаРабот;
			ВремяОкончания = Выборка.ВремяОкончанияРабот; 
			НовыйСпец = Выборка.Специалист;
		КонецЕсли; 
	КонецЕсли; 
	
	Если ДатаРабот <> ДатаПроведенияРабот Тогда 
		НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеСообщение.ТекстСообщения = СтрШаблон("По заявке %1 установлена новая дата проведения работ %2",
													Ссылка,Формат(ДатаПроведенияРабот,"ДФ=dd.MM.yyyy"));
		НовоеСообщение.Записать(); 
	КонецЕсли;

	Если ВремяНачала <> ВремяНачалаРабот Тогда 
		НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеСообщение.ТекстСообщения = СтрШаблон("По заявке %1 установлено новое время начала проведения работ %2",
													Ссылка,Формат(ВремяНачалаРабот,"ДЛФ=T"));
		НовоеСообщение.Записать(); 
	КонецЕсли;
	
	Если ВремяОкончания <> ВремяОкончанияРабот Тогда 
		НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеСообщение.ТекстСообщения = СтрШаблон("По заявке %1 установлено новое время окончания проведения работ %2",
													Ссылка,Формат(ВремяОкончанияРабот,"ДЛФ=T"));
		НовоеСообщение.Записать(); 
	КонецЕсли; 
	
	Если НовыйСпец <> Специалист Тогда 
		НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеСообщение.ТекстСообщения = СтрШаблон("По заявке %1 установлен новый специалист %2",
													Ссылка,Специалист);
		НовоеСообщение.Записать(); 
	КонецЕсли;

КонецПроцедуры

Процедура СообщениеОНовомДокументе()
			
	НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	НовоеСообщение.ТекстСообщения = СтрШаблон("Поступила новая заявка от %1", Клиент);
	НовоеСообщение.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли