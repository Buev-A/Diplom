
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		Ответственный = Пользователи.ТекущийПользователь();
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
		КонецЕсли;
		
	КонецПроцедуры
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
		
		СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма"); 
		
		СуммаДокументаПрописью = ЧислоПрописью(СуммаДокумента,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, Режим)
		
		Движения.ОбработкаЗаказов.Записывать = Истина;
		Движения.ОстаткиТоваров.Записывать = Истина;
		
		Движение = Движения.ОбработкаЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Заказ = Основание;
		Движение.СуммаОтгрузки = СуммаДокумента;
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ОстаткиТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
	КонецПроцедуры
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗаказПокупателя.Организация КАК Организация,
		               |	ЗаказПокупателя.Контрагент КАК Контрагент,
		               |	ЗаказПокупателя.Договор КАК Договор,
		               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
		               |	ЗаказПокупателя.Товары.(
		               |		Ссылка КАК Ссылка,
		               |		НомерСтроки КАК НомерСтроки,
		               |		Номенклатура КАК Номенклатура,
		               |		Количество КАК Количество,
		               |		Цена КАК Цена,
		               |		Сумма КАК Сумма
		               |	) КАК Товары,
		               |	ЗаказПокупателя.Услуги.(
		               |		Ссылка КАК Ссылка,
		               |		НомерСтроки КАК НомерСтроки,
		               |		Номенклатура КАК Номенклатура,
		               |		Количество КАК Количество,
		               |		Цена КАК Цена,
		               |		Сумма КАК Сумма
		               |	) КАК Услуги
		               |ИЗ
		               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		               |ГДЕ
		               |	ЗаказПокупателя.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Не Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		ТоварыОснования = Выборка.Товары.Выбрать();
		Пока ТоварыОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
		КонецЦикла;
		
		УслугиОснования = Выборка.Услуги.Выбрать();
		Пока УслугиОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
		КонецЦикла;
		
		Основание = ДанныеЗаполнения;
		
	КонецПроцедуры
	
	Процедура ВКМ_ВыполнитьАвтозаполнение(Объект)Экспорт      
		
		ЭтотОбъект.Записать();
		
		НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		
		Если НЕ ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) и НЕ ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
			Сообщить("Ошибка! Заполните необходимые данные");
			Возврат;
		КонецЕсли;
		
		Товары.Очистить();
		Услуги.Очистить();
		
		//автозаполнение ТЧ_Товары предопределенным значением номенклатуры 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		               |	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК ВКМ_СуммаАбонентскойПлаты
		               |ИЗ
		               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		               |ГДЕ
		               |	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты <> 0
		               |	И ДоговорыКонтрагентов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Договор);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда   			
			
			НоваяСтрока = Товары.Добавить(); 
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Цена = Выборка.ВКМ_СуммаАбонентскойПлаты / НоваяСтрока.Количество; 
			НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
			НоваяСтрока.Сумма = Выборка.ВКМ_СуммаАбонентскойПлаты; 
			
		КонецЕсли; 
		
		//автозаполнение ТЧ_Услуги общим количеством часов к оплате за месяц (по дате документа)
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВКМ_ВыполненныеКлиентуРаботы.Период КАК Период,
		               |	СУММА(ВКМ_ВыполненныеКлиентуРаботы.КоличествоЧасов) КАК КоличествоЧасов,
		               |	СУММА(ВКМ_ВыполненныеКлиентуРаботы.СуммаКОплате) КАК СуммаКОплате,
		               |	ВКМ_ВыполненныеКлиентуРаботы.Договор КАК Договор
		               |ИЗ
		               |	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы КАК ВКМ_ВыполненныеКлиентуРаботы
		               |ГДЕ
		               |	ВКМ_ВыполненныеКлиентуРаботы.Договор = &Договор
		               |	И ВКМ_ВыполненныеКлиентуРаботы.Период > НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
		               |	И ВКМ_ВыполненныеКлиентуРаботы.Период < КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВКМ_ВыполненныеКлиентуРаботы.Договор,
		               |	ВКМ_ВыполненныеКлиентуРаботы.Период
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период";
		
		Запрос.УстановитьПараметр("Договор", Договор);
		Запрос.УстановитьПараметр("Дата", Дата);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
			НоваяСтрока.Количество = Выборка.КоличествоЧасов;
			НоваяСтрока.Цена = Выборка.СуммаКОплате / Выборка.КоличествоЧасов; 
			НоваяСтрока.Сумма = Выборка.СуммаКОплате;
			
		КонецЦикла;  
		
		Записать();
		
	КонецПроцедуры
	
	#КонецОбласти
	
#КонецЕсли
